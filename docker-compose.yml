version: "3.9"
name: "photo-message-broker"

services:
  photo-message-broker-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_started

    networks:
      - app-network
    environment:
      - elasticsearch.address=elasticsearch:9200
      - SPRING_ELASTICSEARCH_URIS=elasticsearch:9200
      - SPRING_RABBITMQ_QUEUE=user-registration-queue
      - SPRING_RABBITMQ_EXCHANGE=user-registration-exchange
      - SPRING_RABBITMQ_PASSWORD=secret
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_HOST=rabbitmq

  elasticsearch:
    healthcheck:
      test: curl -s http://elasticsearch01:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    image: elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms812m -Xmx812m'
      - xpack.security.enabled=false
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    labels:
      co.elastic.metrics/module: "elasticsearch"
      co.elastic.metrics/hosts: "http://elasticsearch:9200"
    networks:
      - app-network


  kibana:
    image: kibana:8.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started
    networks:
      - app-network

  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:latest
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=admin'
    ports:
      - '5672:5672'
    networks:
      - app-network

networks:
  app-network:
